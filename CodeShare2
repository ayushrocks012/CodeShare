Option Explicit

' Global Variables
Public SapGuiAuto, WScript
Public objGui As GuiApplication
Public objConn As GuiConnection
Public objSess As GuiSession
Public Const W_System As String = "PEA100"
Public Const Max_Possible_Session As Integer = 6

Sub StartExtract()

    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    ' Initialize SAP Session
    If Not InitializeSAPSession Then
        GoTo Cleanup
    End If
    
    ' Run GUI Automation Script
    RunGUIScript
    
    ' Clean up SAP Session
    objSess.EndTransaction
    Set objSess = Nothing

Cleanup:
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    Exit Sub
    
ErrHandler:
    MsgBox "Error: " & Err.Description, vbCritical
    Resume Cleanup

End Sub

' Function to initialize SAP session
Private Function InitializeSAPSession() As Boolean

    Dim i As Integer, j As Integer
    Dim W_conn As Object, W_Sess As Object
    
    InitializeSAPSession = False

    If objGui Is Nothing Then
        Set SapGuiAuto = GetObject("SAPGUI")
        If SapGuiAuto Is Nothing Then
            MsgBox "Could not find SAP GUI.", vbCritical
            Exit Function
        End If
        Set objGui = SapGuiAuto.GetScriptingEngine
        If objGui Is Nothing Then
            MsgBox "Could not initialize SAP scripting engine.", vbCritical
            Exit Function
        End If
    End If
    
    ' Loop through existing connections and sessions correctly with numeric indexing
    For i = 0 To objGui.Children.Count - 1
        Set W_conn = objGui.Children(i)
        
        For j = 0 To W_conn.Children.Count - 1
            Set W_Sess = W_conn.Children(j)
            
            If (W_Sess.Info.SystemName & W_Sess.Info.Client) = W_System Then
                If W_Sess.Info.Transaction = "SESSION_MANAGER" _
                    Or W_Sess.Info.Transaction = "SMEN" _
                    Or W_Sess.Info.Transaction = "S000" Then
                    
                    Set objConn = W_conn
                    Set objSess = W_Sess
                    InitializeSAPSession = True
                    Exit Function
                End If
            End If
        Next j
    Next i
    
    ' If no suitable session found, inform user
    MsgBox "No active session to system " & W_System & " or scripting is not enabled.", vbCritical

End Function

' Procedure to run SAP GUI automation tasks
Private Sub RunGUIScript()

    Dim filePath As String, fileName As String
    Dim fullFilePath As String
    Dim timeStamp As String
    
    ' Dynamic file naming with timestamp
    timeStamp = Format(Now(), "YYYYMMDD_HHMMSS")
    filePath = "Z:\Demand\Demand Review\2025\03 Mar 25\SAP H2H Report\"
    fileName = "H2H_Usage_Report_" & timeStamp & ".xlsx"
    fullFilePath = filePath & fileName
    
    With objSess
        .FindById("wnd[0]/tbar[0]/okcd").Text = "mb51"
        .FindById("wnd[0]").sendVKey 0
        
        ' Set parameters (customize dates as necessary)
        .FindById("wnd[0]/usr/ctxtWERKS-LOW").Text = "1534"
        .FindById("wnd[0]/usr/ctxtBUDAT-LOW").Text = "01.03.2025"
        .FindById("wnd[0]/usr/ctxtBUDAT-HIGH").Text = "31.03.2025"
        .FindById("wnd[0]/usr/radRFLAT_L").Select
        .FindById("wnd[0]/usr/ctxtALV_DEF").Text = "AYUSH_TRY"
        .FindById("wnd[0]/tbar[1]/btn[8]").press
        
        ' Export Report to Excel
        .FindById("wnd[0]/usr/cntlGRID1/shellcont/shell").SelectContextMenuItem "&XXL"
        .FindById("wnd[1]/tbar[0]/btn[0]").press
        .FindById("wnd[1]/usr/ctxtDY_PATH").Text = filePath
        .FindById("wnd[1]/usr/ctxtDY_FILENAME").Text = fileName
        .FindById("wnd[1]/tbar[0]/btn[0]").press
        
        ' Exit transaction
        .FindById("wnd[0]/tbar[0]/btn[15]").press
        .FindById("wnd[0]/tbar[0]/btn[15]").press
    End With
    
    MsgBox "Data extraction successful!" & vbCrLf & "File saved as:" & vbCrLf & fullFilePath, vbInformation

End Sub
