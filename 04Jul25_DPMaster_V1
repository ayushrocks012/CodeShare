let
    // Section 1: Load and Prepare Source Files
    Source = SharePoint.Files("https://abbott.sharepoint.com/sites/GB-AN-HeadOffice", [ApiVersion = 15]),
    #"Filtered Rows" = Table.SelectRows(Source, each ([Folder Path] = "https://abbott.sharepoint.com/sites/GB-AN-HeadOffice/Shared Documents/General/Demand/DP Master Download/")),
    #"Added TimestampText" = Table.AddColumn(#"Filtered Rows", "TimestampText", each Text.Middle([Name], 29, 19)),
    #"Replaced Underscore" = Table.ReplaceValue(#"Added TimestampText","_","T",Replacer.ReplaceText,{"TimestampText"}),
    #"Added TimestampFixed" = Table.AddColumn(#"Replaced Underscore", "TimestampFixed", each Text.Start([TimestampText], 10) & "T" & Text.Middle([TimestampText], 11, 2) & ":" & Text.Middle([TimestampText], 14, 2) & ":" & Text.End([TimestampText], 2)),
    #"Changed Type" = Table.TransformColumnTypes(#"Added TimestampFixed",{{"TimestampFixed", type datetime}}),
    #"Filtered Hidden Files" = Table.SelectRows(#"Changed Type", each [Attributes]?[Hidden]? <> true),
    #"Invoked Custom Function" = Table.AddColumn(#"Filtered Hidden Files", "Transform File", each #"Transform File"([Content])),
    #"Removed Other Columns" = Table.SelectColumns(#"Invoked Custom Function",{"TimestampFixed", "Transform File"}),
    #"Expanded Table Column" = Table.ExpandTableColumn(#"Removed Other Columns", "Transform File", Table.ColumnNames(#"Transform File"(#"Sample File"))),
    
    // Group by year to find the latest file for each year
    #"Grouped by Year" = Table.Group(#"Expanded Table Column", {"Calendar year"}, {{"AllData", each _, type table}}),
    #"Added LatestTimestamp" = Table.AddColumn(#"Grouped by Year", "LatestTimestamp", each List.Max([AllData][TimestampFixed])),

    // *** FIX APPLIED HERE ***
    // Rename the grouping column to avoid a name conflict during the expansion step.
    #"Renamed Grouping Column" = Table.RenameColumns(#"Added LatestTimestamp",{{"Calendar year", "Calendar year.Group"}}),

    // Expand the nested table data. This now works because the conflicting column name has been changed.
    #"Expanded AllData" = Table.ExpandTableColumn(#"Renamed Grouping Column", "AllData", Table.ColumnNames(Table.Combine(#"Renamed Grouping Column"[AllData]))),
    
    // Filter to keep only the rows from the latest file for each year
    #"Filtered Latest Only" = Table.SelectRows(#"Expanded AllData", each [TimestampFixed] = [LatestTimestamp]),
    
    // Select the final columns needed for the main table, implicitly removing helper columns like 'LatestTimestamp' and 'Calendar year.Group'
    #"Selected Columns" = Table.SelectColumns(#"Filtered Latest Only",{"Calendar year", "Country", "Local Item number", "APO Product (1-6-3-3)", "APO Customer", "Column8", "Location/Plant/Site", "Key Figures", "Calendar month", "Column14"}),
    #"Renamed Columns" = Table.RenameColumns(#"Selected Columns",{{"Column8", "APO Customer Name"}, {"Column14", "Data"}}),
    #"Changed Year Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Calendar year", Int64.Type}}),

    // Section 2: Efficiently Determine Month Type and Projections in a Single Pass
    #"Added Month and Projection Logic" = Table.AddColumn(#"Changed Year Type", "ProjectionLogic", each
        let
            // Determine Month Number using a list for efficiency and clarity
            monthNames = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"},
            monthNum = List.PositionOf(monthNames, Text.Upper([Calendar month])) + 1,

            // Determine Month Type (Historic/Future)
            currentYear = Date.Year(DateTime.LocalNow()),
            currentMonth = Date.Month(DateTime.LocalNow()),
            monthType = if [Calendar year] < currentYear or ([Calendar year] = currentYear and monthNum < currentMonth) then "Historic" else "Future",

            // Determine Projection Type and New Key Figure Name in one go
            keyFig = [Key Figures],
            projectionType =
                if List.Contains({"Actual Shipments", "Manual Stat Adjustment"}, keyFig) then "Base"
                else if List.Contains({"FOC Shipments", "FOC Adjustment"}, keyFig) then "FOC"
                else if List.Contains({"Samples Shipments", "Samples Adjustment"}, keyFig) then "Samples"
                else "Other",

            newKeyFigure =
                if projectionType = "Base" then "Cur Proj Qty Base (Sell)"
                else if projectionType = "FOC" then "Cur Proj Qty FOC (Sell)"
                else if projectionType = "Samples" then "Cur Proj Qty Samples (Sell)"
                else keyFig,

            // Determine if the row should be included based on the rules
            include =
                (projectionType = "Base" and ((monthType = "Historic" and keyFig = "Actual Shipments") or (monthType = "Future" and keyFig = "Manual Stat Adjustment"))) or
                (projectionType = "FOC" and ((monthType = "Historic" and keyFig = "FOC Shipments") or (monthType = "Future" and keyFig = "FOC Adjustment"))) or
                (projectionType = "Samples" and ((monthType = "Historic" and keyFig = "Samples Shipments") or (monthType = "Future" and keyFig = "Samples Adjustment"))) or
                (projectionType = "Other")
        in
        [ IsIncluded = include, NewKeyFigure = newKeyFigure ]
    ),
    
    // Section 3: Expand, Filter, and Group to Finalize
    #"Expanded Logic" = Table.ExpandRecordColumn(#"Added Month and Projection Logic", "ProjectionLogic", {"IsIncluded", "NewKeyFigure"}),
    #"Filtered Rows to Keep" = Table.SelectRows(#"Expanded Logic", each [IsIncluded] = true),
    #"Removed Original Key Figure Column" = Table.RemoveColumns(#"Filtered Rows to Keep", {"Key Figures", "IsIncluded"}),
    #"Grouped Rows for Final Output" = Table.Group(#"Removed Original Key Figure Column", 
        {"Country", "Local Item number", "APO Product (1-6-3-3)", "APO Customer", "APO Customer Name", "Location/Plant/Site", "Calendar year", "Calendar month", "NewKeyFigure"}, 
        {{"Data", each List.Sum([Data]), type nullable number}}
    ),
    #"Renamed Key Figure Column" = Table.RenameColumns(#"Grouped Rows for Final Output", {{"NewKeyFigure", "Key Figures"}})

in
    #"Renamed Key Figure Column"
