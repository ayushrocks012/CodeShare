let
    // Your original steps to get the data from the sample file
    Source = Excel.Workbook(Parameter1, null, true),
    DataSheet = Source{[Item="Analysis 1 - DP Master Plann...",Kind="Sheet"]}[Data],
    #"Removed Top Rows" = Table.Skip(DataSheet,3),
    #"Promoted Headers" = Table.PromoteHeaders(#"Removed Top Rows", [PromoteAllScalars=true]),

    // Perform basic type changes early for stability
    #"Changed Column Types" = Table.TransformColumnTypes(#"Promoted Headers",{
        {"Country", type text}, {"Local Item number", type text}, {"APO Product (1-6-3-3)", type text},
        {"APO Customer", type text}, {"Column8", type text}, {"Location/Plant/Site", type text},
        {"Key Figures", type text}, {"Calendar year", type any}, {"Calendar month", type text}, {"Column14", type number}
    }),

    // Convert "Calendar year" to a number right away to prevent errors later
    #"Changed Year Type" = Table.TransformColumnTypes(#"Changed Column Types",{{"Calendar year", Int64.Type}}),

    // *** OPTIMIZATION: Buffer values that are constant for every row ***
    // Calculate the current date only ONCE.
    CurrentDate = DateTime.LocalNow(),
    CurrentYearValue = Date.Year(CurrentDate),
    CurrentMonthValue = Date.Month(CurrentDate),
    
    // Buffer the lists for Key Figure lookups only ONCE.
    BaseKeys = {"Actual Shipments", "Manual Stat Adjustment"},
    FOCKeys = {"FOC Shipments", "FOC Adjustment"},
    SampleKeys = {"Samples Shipments", "Samples Adjustment"},

    // This is the efficient, single-pass logic now running inside the sample file transformation
    #"Added Month and Projection Logic" = Table.AddColumn(#"Changed Year Type", "ProjectionLogic", each
        let
            // Determine Month Number using a list for efficiency and clarity
            monthNames = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"},
            monthNum = if [Calendar month] <> null then List.PositionOf(monthNames, Text.Upper([Calendar month])) + 1 else -1,

            // Determine Month Type by referencing the buffered variables - MUCH FASTER
            monthType = if [Calendar year] < CurrentYearValue or ([Calendar year] = CurrentYearValue and monthNum < CurrentMonthValue) then "Historic" else "Future",

            // Determine Projection Type and New Key Figure Name in one go
            keyFig = [Key Figures],
            projectionType =
                if List.Contains(BaseKeys, keyFig) then "Base"
                else if List.Contains(FOCKeys, keyFig) then "FOC"
                else if List.Contains(SampleKeys, keyFig) then "Samples"
                else "Other",

            newKeyFigure =
                if projectionType = "Base" then "Cur Proj Qty Base (Sell)"
                else if projectionType = "FOC" then "Cur Proj Qty FOC (Sell)"
                else if projectionType = "Samples" then "Cur Proj Qty Samples (Sell)"
                else keyFig,

            // Determine if the row should be included based on the rules
            include =
                (projectionType = "Base" and ((monthType = "Historic" and keyFig = "Actual Shipments") or (monthType = "Future" and keyFig = "Manual Stat Adjustment"))) or
                (projectionType = "FOC" and ((monthType = "Historic" and keyFig = "FOC Shipments") or (monthType = "Future" and keyFig = "FOC Adjustment"))) or
                (projectionType = "Samples" and ((monthType = "Historic" and keyFig = "Samples Shipments") or (monthType = "Future" and keyFig = "Samples Adjustment"))) or
                (projectionType = "Other")
        in
        [ IsIncluded = include, NewKeyFigure = newKeyFigure ]
    ),
    
    // Expand the logic into columns. This pre-processed table is what the main query will receive.
    #"Expanded Logic" = Table.ExpandRecordColumn(#"Added Month and Projection Logic", "ProjectionLogic", {"IsIncluded", "NewKeyFigure"})
in
    #"Expanded Logic"
